name: manual-cicd

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Enter Branch/Tag/SHA'
        required: true
        default: 'master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  COMPONENT: "gh-actions"
  REPO: ${{ github.repository }}

jobs:
  ############
  ## ToDo: Add logic to check if the image already exists before build
  ## Benefits: Saves GHActions cost and CI-CD time
  #############

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag for image
        id: date
        run: echo "::set-output name=now::$(date +'%Y%m%d%H%M%S')"

      - name: Create alternate tag for image
        id: gittag
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ inputs.branch }}
            ${{ steps.gittag.outputs.sha }}
            ${{ steps.date.outputs.now }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: devops/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}

  deploy-dev:
    if: ${{ inputs.env }} = 'dev'
    runs-on: ubuntu-latest
    needs: [build]
    environment: dev
    permissions:
      contents: read
      packages: read

    steps:
      # This step may not be required as well.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "IMAGE_TAG=`git rev-parse --short HEAD`" >> $GITHUB_ENV
      
      - name: Add REPO_NAME to env
        run: echo "REPO_NAME=`echo $REPO | cut -f2 -d"/"`" >> $GITHUB_ENV

      - name: prepare for SSH-Tunnel 
        run: |-
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.BASTION_HOST }} >> /home/runner/.ssh/known_hosts
          cat /home/runner/.ssh/known_hosts

      - name: Create SSH-Tunnel
        run: |-
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh -fN -v -L 127.0.0.1:6443:${{ secrets.KUBE_ENDPOINT }}:6443 ${{ secrets.BASTION_SSH_USER }}@${{ secrets.BASTION_HOST }}

      - name: Setup Kube-config
        run: |-
          mkdir -p ~/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 -d > ~/.kube/config
          chmod 400 ~/.kube/config

      - name: deploy
        run: |-
          chmod +x devops/deploy.sh && ./devops/deploy.sh

  deploy-uat:
    runs-on: ubuntu-latest
    environment: uat
    needs: [deploy-dev]
    permissions:
      contents: read
      packages: read

    steps:
      # This step may not be required as well.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "IMAGE_TAG=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Add REPO_NAME to env
        run: echo "REPO_NAME=`echo $REPO | cut -f2 -d"/"`" >> $GITHUB_ENV

      - name: prepare for SSH-Tunnel 
        run: |-
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.BASTION_HOST }} >> /home/runner/.ssh/known_hosts
          cat /home/runner/.ssh/known_hosts

      - name: Create SSH-Tunnel
        run: |-
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh -fN -v -L 127.0.0.1:6443:${{ secrets.KUBE_ENDPOINT }}:6443 ${{ secrets.BASTION_SSH_USER }}@${{ secrets.BASTION_HOST }}

      - name: Setup Kube-config
        run: |-
          mkdir -p ~/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 -d > ~/.kube/config
          chmod 400 ~/.kube/config

      - name: deploy
        run: |-
          chmod +x devops/deploy.sh && ./devops/deploy.sh

  deploy-gb-prod:
    runs-on: ubuntu-latest
    environment: gb-prod
    needs: [deploy-uat]
    permissions:
      contents: read
      packages: read

    steps:
      # This step may not be required as well.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "IMAGE_TAG=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Add REPO_NAME to env
        run: echo "REPO_NAME=`echo $REPO | cut -f2 -d"/"`" >> $GITHUB_ENV

      - name: prepare for SSH-Tunnel 
        run: |-
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.BASTION_HOST }} >> /home/runner/.ssh/known_hosts
          cat /home/runner/.ssh/known_hosts

      - name: Create SSH-Tunnel
        run: |-
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh -fN -v -L 127.0.0.1:6443:${{ secrets.KUBE_ENDPOINT }}:6443 ${{ secrets.BASTION_SSH_USER }}@${{ secrets.BASTION_HOST }}

      - name: Setup Kube-config
        run: |-
          mkdir -p ~/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 -d > ~/.kube/config
          chmod 400 ~/.kube/config

      - name: deploy
        run: |-
          chmod +x devops/deploy.sh && ./devops/deploy.sh

  deploy-de-prod:
    runs-on: ubuntu-latest
    environment: gb-prod
    needs: [deploy-uat]
    permissions:
      contents: read
      packages: read

    steps:
      # This step may not be required as well.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "IMAGE_TAG=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Add REPO_NAME to env
        run: echo "REPO_NAME=`echo $REPO | cut -f2 -d"/"`" >> $GITHUB_ENV

      - name: prepare for SSH-Tunnel 
        run: |-
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.BASTION_HOST }} >> /home/runner/.ssh/known_hosts
          cat /home/runner/.ssh/known_hosts

      - name: Create SSH-Tunnel
        run: |-
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh -fN -v -L 127.0.0.1:6443:${{ secrets.KUBE_ENDPOINT }}:6443 ${{ secrets.BASTION_SSH_USER }}@${{ secrets.BASTION_HOST }}

      - name: Setup Kube-config
        run: |-
          mkdir -p ~/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 -d > ~/.kube/config
          chmod 400 ~/.kube/config

      - name: deploy
        run: |-
          chmod +x devops/deploy.sh && ./devops/deploy.sh
